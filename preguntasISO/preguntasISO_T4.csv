texto_pregunta,tema_id,opciones,indices_correctos,explicacion,dificultad
"En el sistema de ficheros Unix, ¿qué ocurre cuando se elimina una entrada de un directorio y no hay ningún registro previo?",4,"[""El registro se marca como libre utilizando un número de nodo-i inválido (habitualmente, 0)"", ""El espacio que queda libre se añade al registro que hay justo después""]",0,"Según el texto, cuando se borra una entrada y no hay registro previo, el registro se marca como libre utilizando un número de nodo-i inválido (habitualmente 0). Si hay un registro previo, se añade el espacio libre a ese registro anterior.",dificil
"En la implementación de ficheros mediante nodos-i en Unix, ¿cuál es el número máximo aproximado de bloques de datos de 1 KiB que puede tener un fichero con direcciones de disco de 4 bytes?",4,"[""Aproximadamente 16 millones de bloques (16 GiB)"", ""Aproximadamente 4 millones de bloques (4 GiB)""]",0,"Según el texto, con 10 bloques directos, un BSI (256 bloques), un BDI (256×256=65536 bloques) y un BTI (256×256×256=16777216 bloques), un fichero puede tener hasta 10+256+65536+16777216=16843018 bloques, que es aproximadamente 16 millones de bloques o 16 GiB.",dificil
"En la implementación mediante lista ligada e índice (como FAT), ¿qué valor se usa habitualmente para marcar el final de la lista?",4,"[""Un número de bloque reservado distinto de cero, como 0xFFFFFFFF"", ""El número de bloque 0, que se considera inválido""]",1,"En el ejemplo de la asignación mediante lista ligada e índice (figura 4.6), el final de la lista se marca con un 0, que no se considera un número de bloque válido en ese ejemplo.",dificil
"¿Cuál es la principal desventaja de mantener los nodos-i en disco en la implementación de ficheros mediante nodos-i?",4,"[""La complejidad de la estructura de datos y el coste de mantener copias redundantes de los nodos-i"", ""La inmensa mayoría de los ficheros son pequeños y el nodo-i guardaría unas pocas direcciones de disco, estando el resto del bloque vacío""]",1,"Según el texto, ""la inmensa mayoría de los ficheros son pequeños (incluso hay ficheros vacíos) y el nodo-i guardaría unas pocas direcciones de disco, estando el resto del bloque vacío"".",dificil
"En la asignación mediante lista ligada de bloques, ¿cuál es el principal inconveniente relacionado con el tamaño útil de los bloques?",4,"[""El menor aprovechamiento del espacio en disco debido a la fragmentación interna"", ""El tamaño del espacio para almacenamiento de datos en un bloque ya no es potencia de dos, lo que complica las operaciones de lectura y escritura""]",1,"Según el texto, un inconveniente importante de la asignación mediante lista ligada es que ""el tamaño del espacio para almacenamiento de datos en un bloque ya no es potencia de dos, puesto que el apuntador ocupa algunos bytes"", lo que complica las operaciones de lectura/escritura de tamaño potencia de 2.",dificil
"En los sistemas de ficheros modernos, ¿qué estructura se utiliza principalmente para registrar los bloques libres en disco?",4,"[""Lista ligada de bloques libres"", ""Mapa de bits""]",1,"El texto menciona que la técnica más utilizada en la práctica es el mapa de bits, utilizado en sistemas de ficheros como Ext2, Ext3, Ext4 y NTFS, principalmente porque suele ocupar menos espacio y facilita la búsqueda de bloques libres consecutivos.",dificil
"¿Qué ocurre en Unix si se intenta crear un enlace físico (hard link) a un fichero en un sistema de ficheros distinto al del enlace?",4,"[""Se crea automáticamente un enlace simbólico en su lugar"", ""No se permite la operación""]",1,"Según el texto, Unix ""no permite crear un enlace físico a un fichero en un sistema de ficheros distinto al suyo, pero sí permite crear un enlace simbólico"".",dificil
"¿Cuál de las siguientes operaciones sobre directorios NO es proporcionada directamente por el sistema operativo a los programas de usuario?",4,"[""writedir (escribir directorio)"", ""readdir (leer directorio)""]",0,"Según el texto, no existe una operación writedir para cambiar el contenido de un directorio. En su lugar, las modificaciones se hacen indirectamente a través de otras llamadas al sistema que crean, borran o renombran ficheros o directorios.",dificil
"En la implementación mediante nodos-i, ¿dónde se almacenan típicamente los atributos de un fichero en Unix?",4,"[""En una estructura de datos separada referenciada desde la entrada de directorio"", ""En el propio nodo-i del fichero""]",1,"Según la figura 4.8 y el texto, el nodo-i en Unix guarda no solo las direcciones de disco sino también los atributos del fichero correspondiente.",dificil
"En Unix, ¿qué sucede con un bloque de metadatos modificado que se encuentra en la caché de disco?",4,"[""Se escribe en disco a los 30 segundos o antes"", ""Se escribe en disco a los 5 segundos o antes""]",1,"Según el texto, en Unix, los bloques de metadatos (aquellos importantes para la consistencia del sistema de ficheros) se escriben en disco a los 5 segundos o antes, mientras que los bloques de datos se escriben a los 30 segundos o antes.",dificil
"¿Cuál es la principal ventaja del mapa de bits sobre la lista ligada como método para registrar bloques libres?",4,"[""El mapa de bits ocupa menos espacio en disco cuando el disco está casi vacío"", ""El mapa de bits permite buscar de forma sencilla grupos de bloques libres consecutivos en disco""]",1,"El texto menciona que una de las ventajas del mapa de bits es que ""permite buscar de forma sencilla grupos de bloques libres consecutivos en disco"", lo cual es importante para el rendimiento ya que leer o escribir bloques consecutivos es más eficiente.",dificil
"En la implementación de ficheros mediante nodos-i, ¿qué se guarda en un bloque doblemente indirecto (BDI)?",4,"[""Direcciones de bloques triplemente indirectos"", ""Direcciones de bloques simplemente indirectos""]",1,"Según la descripción de la estructura de nodos-i, un bloque doblemente indirecto (BDI) contiene direcciones de bloques simplemente indirectos (BSI), que a su vez contienen direcciones de bloques de datos.",dificil
"En Unix, si un directorio tiene registros con espacio libre suficiente para crear una nueva entrada, ¿qué sucede?",4,"[""Se añade un nuevo bloque de datos al directorio para alojar la nueva entrada"", ""Se divide un registro existente en dos: uno para la entrada que ya existe y otro para la nueva entrada""]",1,"Según el texto, ""si ahora se crea un fichero, el sistema de ficheros buscará un registro con suficiente espacio libre para crear un nuevo registro, dividiendo el registro existente en dos: uno para la entrada que ya existe y otro para la nueva entrada"".",dificil
"¿Cuál de las siguientes afirmaciones sobre el campo 'longitud del registro' en las entradas de directorio de Unix es correcta?",4,"[""Permite optimizar el espacio utilizado haciendo que todas las entradas tengan un tamaño fijo"", ""Permite tener registros más grandes de lo estrictamente necesario, lo que facilita las operaciones de renombrado sin tener que mover registros""]",1,"El texto explica que el campo con la longitud del registro permite tener registros más grandes de lo estrictamente necesario, lo que facilita operaciones como renombrar entradas sin tener que cambiar el tamaño del registro y, por tanto, sin tener que borrar, crear y copiar registros.",dificil
"En los sistemas de ficheros modernos, ¿cuál es la principal limitación de la asignación adyacente o contigua de ficheros?",4,"[""La fragmentación externa y la dificultad de implementación eficiente si no se conoce el tamaño máximo del fichero de antemano"", ""La necesidad de mantener tablas de asignación en memoria principal que ocupan mucho espacio""]",0,"Según el texto, la asignación contigua presenta dos inconvenientes principales: no es realizable de manera eficiente a menos que se conozca el tamaño máximo del fichero de antemano (lo que rara vez ocurre), y sufre de fragmentación externa cuando el espacio libre está en huecos pequeños dispersos.",dificil
"¿Qué información contiene una entrada de directorio en un sistema Unix moderno con soporte para nombres largos?",4,"[""Número de nodo-i, longitud del registro, longitud del nombre, tipo de entrada y nombre del fichero"", ""Nombre y extensión del fichero, atributos, fecha de modificación, hora de modificación y tamaño del fichero""]",0,"Según la figura 4.11, una entrada de directorio en Unix moderno contiene el número de nodo-i, la longitud del registro, la longitud del nombre, el tipo de la entrada y el nombre del fichero.",dificil
"En el contexto de la caché de disco, ¿qué modificación se hace al algoritmo LRU para mantener la consistencia del sistema de ficheros?",4,"[""Los bloques recién usados que probablemente no se volverán a utilizar pronto pasan directamente al final de la lista LRU, y los bloques esenciales para la consistencia se escriben en disco lo antes posible"", ""Todos los bloques modificados se escriben inmediatamente en disco sin importar su importancia para la consistencia""]",0,"Según el texto, el LRU modificado tiene en cuenta que los bloques que probablemente no se volverán a utilizar pronto pasan al final de la lista, y los bloques esenciales para la consistencia del sistema de ficheros se escriben en disco lo antes posible, independientemente de su posición en la lista LRU.",dificil
"¿Cuál es la principal ventaja de tener bloques lógicos grandes en un sistema de ficheros?",4,"[""Mayor tasa de transferencia en las operaciones de lectura/escritura en disco"", ""Menor fragmentación interna en los ficheros pequeños""]",0,"Según el texto, los bloques lógicos grandes proporcionan tasas de transferencia altas en las lecturas/escrituras de disco, aunque a costa de una mayor fragmentación interna.",dificil
"¿Qué ocurre cuando un registro de directorio en Unix no puede almacenarse completamente en un bloque debido a su tamaño?",4,"[""El registro se divide en partes que se almacenan en bloques consecutivos"", ""Un registro no puede atravesar la frontera entre bloques, por lo que se almacena en un nuevo bloque completo""]",1,"El texto indica que ""un aspecto a tener en cuenta es que un registro solo puede estar en un bloque, es decir, un registro no puede atravesar la frontera entre bloques"".",dificil
"En la resolución de rutas en Unix, ¿qué se hace con los directorios '.' y '..'?",4,"[""Reciben un tratamiento especial usando punteros internos para evitar accesos a disco"", ""Se buscan como cualquier otro nombre, ya que existen entradas reales para ellos""]",1,"Según el texto, ""los directorios '.' y '..' no tienen tratamiento especial, se buscan como cualquier otro nombre, ya que existen entradas reales para ellos"".",dificil
"¿Cuál es la principal ventaja de la asignación mediante nodos-i frente a la lista ligada con índice?",4,"[""Menor uso de memoria principal para ficheros grandes"", ""Mayor flexibilidad en la gestión de permisos y atributos de ficheros""]",0,"Según el ejemplo del texto, para un fichero de 16 GiB, el método de lista ligada con índice necesitaría un índice en memoria de más de 64 MiB, mientras que con nodos-i solo se necesita mantener en memoria el nodo-i mientras el fichero está abierto, independientemente del tamaño del fichero.",dificil
"En Unix, ¿qué sucede con el espacio de un directorio recién creado?",4,"[""Se deja completamente vacío hasta que se creen ficheros en él"", ""El registro asociado a la entrada '.' ocupa todo el espacio que queda tras crear la entrada '..'""]",1,"Según el texto, cuando se crea un directorio, este no está totalmente vacío sino que tiene las entradas '.' y '..' y ""el registro asociado a la entrada '.' ocupa todo el espacio que queda tras crear la entrada '..'"".",dificil
"En el contexto de sistemas de ficheros, ¿qué es la fragmentación externa?",4,"[""El espacio desperdiciado en el último bloque de un fichero por no estar completamente lleno"", ""La situación donde hay suficiente espacio libre total, pero disperso en huecos pequeños que no pueden utilizarse eficientemente""]",1,"Según el texto, la fragmentación externa surge ""cuando hay bloques libres que no se pueden ocupar por no estar en huecos suficientemente grandes"", es decir, el espacio libre está fragmentado en huecos pequeños.",dificil
"¿Qué tipo de información se guarda típicamente en el superbloque de un sistema de ficheros Unix?",4,"[""Mapa de bits de bloques libres y tabla de nodos-i"", ""Número total de bloques lógicos, número total de nodos-i y tamaño de los mapas de bits""]",1,"Según el texto, el superbloque ""contiene información crítica relativa a la organización del sistema de ficheros: número total de bloques lógicos, número total de nodos-i, tamaño de los mapas de bits de bloques y nodos-i, etc.""",dificil
"En MS-DOS, ¿cómo se representan los segundos en el campo de hora de la última modificación de un fichero?",4,"[""Con 6 bits, permitiendo representar segundos de 0 a 59"", ""Con 5 bits, guardando solo segundos pares""]",1,"Según el texto, debido a limitaciones de espacio (16 bits para representar hora, minutos y segundos), la solución en MS-DOS ""pasa por guardar solo segundos pares, por lo que bastan 5 bits"" para esta información.",dificil
"¿Cuál es la principal desventaja de los enlaces simbólicos (soft links) en comparación con los enlaces físicos (hard links)?",4,"[""Mayor coste temporal y de espacio"", ""Menor flexibilidad para enlazar a ficheros en otros sistemas de ficheros""]",0,"Según el texto, ""el problema de los enlaces simbólicos es su elevado coste, tanto temporal (se tiene que resolver la ruta del enlace simbólico y, después, la ruta del fichero real), como de espacio (hace falta un nodo-i para cada enlace y un bloque en disco)"".",dificil
"¿Qué factor determina principalmente la elección del tamaño del bloque lógico en un sistema de ficheros?",4,"[""La capacidad total del disco y el número de ficheros esperados"", ""El equilibrio entre la eficiencia en el uso del espacio y la tasa de transferencia""]",1,"Según el texto, ""a la hora de elegir un tamaño de bloque lógico, hay que buscar un equilibrio razonable entre la eficiencia en el uso del espacio en disco y la tasa de transferencia en las operaciones de disco.""",dificil
"En una entrada de directorio en MS-DOS, ¿cuántos bytes se utilizan para almacenar el tamaño del fichero?",4,"[""2 bytes, permitiendo ficheros de hasta 64 KiB"", ""4 bytes, permitiendo ficheros de hasta 4 GiB""]",1,"Según la figura 4.10 y el texto explicativo, el campo de tamaño del fichero en una entrada de directorio de MS-DOS es de 4 bytes, lo que permite ficheros de hasta 4 GiB.",dificil
"¿Qué ocurre cuando se borra un fichero que tiene múltiples enlaces físicos (hard links)?",4,"[""El fichero se elimina inmediatamente y todas las otras referencias al fichero quedan inválidas"", ""El nodo-i y los bloques de datos solo se liberan cuando se elimina el último enlace al fichero""]",1,"Según el texto, para los enlaces físicos existe un contador de enlaces en el nodo-i, y ""si se elimina un enlace borrando un fichero y hay más enlaces, el nodo-i no se debe liberar"". Por lo tanto, solo cuando se elimina el último enlace se liberan los recursos.",dificil
"En los sistemas de ficheros Unix modernos, ¿dónde se almacenan típicamente los nodos-i?",4,"[""En una única tabla consecutiva al inicio del sistema de ficheros"", ""En una tabla dividida en varios trozos repartidos por todo el disco""]",1,"Según la nota al pie de la página 14, ""por razones de eficiencia, esta tabla [de nodos-i] muchas veces está dividida en varios trozos repartidos por todo el disco.""",dificil
"En el contexto de sistemas de ficheros, ¿qué significa que un nombre de ruta absoluta sea 'mínimo'?",4,"[""Que utiliza el menor número posible de caracteres para representar la ruta"", ""Que el carácter separador no aparece repetido y no se utilizan las expresiones '.' y '..'""]",1,"Según la nota al pie de la página 7, ""la ruta absoluta de un fichero es única siempre que sea 'mínima', es decir, siempre que el carácter separador no aparezca repetido varias veces seguidas y siempre que no se utilicen las expresiones '.' y '..', típicas de las rutas relativas.""",dificil
"¿Cómo se gestiona en Unix el espacio libre cuando se elimina la entrada de un directorio?",4,"[""El registro se marca como no utilizado y se ignora en futuras operaciones de directorio"", ""El espacio se añade al registro anterior, o se marca como libre si no hay registro previo""]",1,"Según el texto y la figura 4.12, cuando se elimina una entrada de directorio en Unix, ""basta con añadir el espacio que queda libre al registro que hay justo antes"" o, si no hay registro previo, ""el registro se marca como libre utilizando un número de nodo-i inválido"".",dificil
"En un sistema de ficheros con nodos-i, ¿qué contiene un bloque triplemente indirecto (BTI)?",4,"[""Direcciones de bloques de datos del fichero"", ""Direcciones de bloques doblemente indirectos""]",1,"Según la descripción de la estructura de nodos-i y la figura 4.8, un bloque triplemente indirecto (BTI) contiene direcciones de bloques doblemente indirectos (BDI), que a su vez contienen direcciones de bloques simplemente indirectos.",dificil
"¿Cuál es el principal problema que se intenta resolver con la caché de disco?",4,"[""La inconsistencia del sistema de ficheros ante fallos del sistema"", ""La lentitud del acceso a disco comparado con el acceso a memoria principal""]",1,"Según el texto, ""el acceso a un disco es bastante más lento que el acceso a memoria principal"" y la caché de disco ""trata de reducir los accesos a disco necesarios"" manteniendo bloques frecuentemente accedidos en memoria principal.",dificil
"En MS-DOS, ¿qué característica distingue al directorio raíz de los demás directorios?",4,"[""El directorio raíz tiene una entrada especial al inicio del sistema de ficheros"", ""El directorio raíz ocupa unos bloques fijos en disco en lugar de implementarse como un fichero""]",1,"Según el texto, ""el directorio raíz [en MS-DOS] es una excepción, ya que ocupa unos bloques fijos en disco en lugar de implementarse como un fichero, lo que hace que tenga un tamaño máximo preestablecido.""",dificil
"En los sistemas de ficheros Unix, ¿qué sucede cuando se crea un directorio?",4,"[""Se crea completamente vacío, sin ninguna entrada"", ""Se crea con dos entradas especiales: '.' y '..'""]",1,"Según el texto, ""cuando hablamos de implementación de directorios en Unix ... un directorio recién creado siempre tendrá las entradas '.' y '..'.""",dificil
"En un sistema de ficheros con bloques de 1 KiB y direcciones de disco de 4 bytes, ¿cuántas direcciones de bloques caben en un bloque simplemente indirecto?",4,"[""1024 direcciones"", ""256 direcciones""]",1,"Según los cálculos del texto, en un bloque de 1 KiB (1024 bytes) caben 1024/4 = 256 direcciones de disco de 4 bytes cada una.",dificil
"¿Qué tipo de fichero se usa en Unix para representar una impresora?",4,"[""Fichero especial de bloques"", ""Fichero especial de caracteres""]",1,"Según el texto, los ficheros especiales de caracteres ""se utilizan para referenciar y acceder a dispositivos serie de E/S como terminales, impresoras y redes"".",dificil
"¿Cuál es la principal ventaja de la asignación mediante lista ligada de bloques?",4,"[""No hay fragmentación externa, ya que se pueden utilizar todos los bloques de disco"", ""Mayor eficiencia en el uso del espacio en disco debido a la ausencia de punteros""]",0,"Según el texto, una de las ventajas de la asignación mediante lista ligada es que ""no hay fragmentación externa, ya que se pueden utilizar todos los bloques de disco. Esto es así porque los bloques de un fichero pueden estar dispersos por el disco"".",dificil
"En Unix, ¿qué atributo de un fichero indica si es un directorio o un fichero regular?",4,"[""El tipo de nodo-i, que se almacena en un campo separado de la entrada de directorio"", ""Un bit en el campo de atributos del nodo-i""]",1,"Según el texto, ""uno de los bits de los atributos almacenados en los nodos-i permite distinguir a un fichero normal de un directorio"".",dificil
"En el contexto de sistemas de ficheros, ¿qué es la fragmentación interna?",4,"[""La dispersión de los bloques de un fichero en diferentes ubicaciones del disco"", ""El espacio desperdiciado cuando un fichero no ocupa completamente su último bloque""]",1,"Según el texto, la fragmentación interna ""surge cuando un fichero no ocupa completamente con información un bloque que le pertenece. Esto suele ocurrir con el último bloque, ya que es raro que el tamaño de un fichero sea múltiplo del tamaño de bloque.""",dificil
"¿Qué diferencia fundamental existe entre las extensiones de los nombres de fichero en sistemas operativos modernos y antiguos?",4,"[""En los sistemas modernos las extensiones son obligatorias, mientras que en los antiguos eran opcionales"", ""En los sistemas modernos la extensión no es significativa para el sistema operativo, aunque puede serlo para aplicaciones específicas""]",1,"Según el texto, ""para los sistemas operativos modernos la extensión no es significativa"", aunque puede ser importante para programas específicos como los exploradores de ficheros.",dificil
"En la estructura de un sistema de ficheros Unix, ¿qué relación existe entre el número total de nodos-i y el tamaño de la tabla de nodos-i?",4,"[""El número total de nodos-i es igual al número de bloques en la tabla de nodos-i multiplicado por el tamaño de bloque"", ""El tamaño de la tabla de nodos-i en bloques es igual al número total de nodos-i multiplicado por su tamaño y dividido por el tamaño de bloque""]",1,"Según el texto, si hay I nodos-i de tamaño TI bytes cada uno, y bloques de tamaño TB bytes, la tabla de nodos-i ocupa ⌈(I·TI)/TB⌉ bloques.",dificil
"¿Cuál es la principal limitación de las rutas relativas en comparación con las rutas absolutas?",4,"[""Las rutas relativas dependen del directorio de trabajo actual, por lo que pueden cambiar su significado"", ""Las rutas relativas no pueden acceder a directorios situados por encima del directorio actual en la jerarquía""]",0,"Las rutas relativas dependen del directorio de trabajo actual, lo que significa que la misma ruta relativa puede referirse a diferentes ficheros o directorios dependiendo del contexto, mientras que las rutas absolutas siempre se refieren al mismo fichero o directorio.",dificil
"En Unix, ¿qué diferencia principal existe entre un enlace físico (hard link) y un enlace simbólico (soft link) a un directorio?",4,"[""Los enlaces físicos a directorios requieren privilegios de administrador, mientras que los simbólicos no"", ""Unix no permite crear enlaces físicos a directorios, pero sí simbólicos""]",1,"Según el texto, ""Unix no permite crear enlaces físicos de directorios, pero sí simbólicos"".",dificil
"En MS-DOS, ¿cómo se almacena el año en el campo de fecha de la última modificación?",4,"[""Con 7 bits, donde el valor 0 corresponde al año 1980"", ""Con 8 bits, donde el valor 0 corresponde al año 1970""]",0,"Según el texto, en MS-DOS el campo de fecha tiene 16 bits y ""los primeros 7 bits almacenan el año, correspondiendo el valor 0 al año 1980"".",dificil
"¿Qué característica permite que ciertos ficheros tengan acceso aleatorio mientras que otros solo permiten acceso secuencial?",4,"[""La naturaleza del dispositivo físico subyacente o restricciones impuestas por el sistema operativo"", ""El tipo de sistema de ficheros utilizado (FAT, Ext4, NTFS, etc.)""]",0,"Según el texto, el tipo de acceso puede estar condicionado ""por la propia naturaleza de los dispositivos"" (como teclados o cintas que solo permiten lectura secuencial) o puede ser ""impuesto por el propio sistema operativo"" (como en el caso de las tuberías).",dificil
"En un sistema de ficheros con mapa de bits para registrar bloques libres, ¿qué ventaja ofrece cuando el disco está casi lleno?",4,"[""Ocupa menos espacio que una lista ligada de bloques libres"", ""Permite encontrar más rápidamente los pocos bloques libres que quedan""]",0,"Según el texto, ""solo si el disco está casi lleno, el mapa de bits ocupará más bloques que la lista ligada"". Por lo tanto, cuando el disco está casi lleno, la lista ligada ocuparía menos espacio, pero el texto indica que el mapa de bits sigue siendo preferido por otras ventajas como facilitar la búsqueda de bloques consecutivos.",dificil
"En Unix, ¿qué operación se utiliza para forzar la escritura en disco de todos los bloques modificados que se encuentran en memoria principal?",4,"[""fsync()"", ""sync()""]",1,"Según el texto, ""los usuarios de Unix también disponen de la orden sync. Al ejecutarse, esta orden fuerza la escritura en disco de todos los bloques, tanto de datos como de metadatos, que se encuentren modificados en memoria principal.""",dificil
"¿Cuál es la principal característica de almacenamiento que define a un fichero en los sistemas operativos modernos?",4,"[""Es una colección de registros estructurados con campos de longitud fija o variable"", ""Es una secuencia de bytes cuyo significado está definido por el programa o programas que acceden al mismo""]",1,"Según el texto, ""en los sistemas operativos modernos (Windows, Linux, Mac OS X, etc.), un fichero es una secuencia de bytes cuyo significado está definido por el programa o programas que acceden al mismo.""",dificil
"En un sistema de ficheros con bloques de 4 KiB, ¿qué ocurre con un registro de directorio en Unix que requiere 6 KiB de espacio?",4,"[""Se divide automáticamente en dos registros de 3 KiB cada uno"", ""No puede crearse porque un registro no puede atravesar la frontera entre bloques""]",1,"Según el texto, ""un registro solo puede estar en un bloque, es decir, un registro no puede atravesar la frontera entre bloques"". Por lo tanto, un registro que requiera más espacio que un bloque no podría crearse en un sistema Unix estándar.",dificil
"Al crear un nuevo fichero en Unix, ¿qué estructuras del sistema de ficheros deben modificarse?",4,"[""El mapa de bits de nodos-i, el bloque de datos del directorio y el nodo-i asignado"", ""El mapa de bits de bloques, el superbloque y la tabla de nodos-i""]",0,"Según el ejemplo de creación de fichero de la figura 4.17, los pasos incluyen buscar un nodo-i libre en el mapa de bits de nodos-i y marcarlo como ocupado, añadir una entrada al directorio, y configurar el nodo-i con la información del nuevo fichero.",dificil